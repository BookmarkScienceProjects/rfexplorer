package rfx

import (
	"image/png"
	"os"
	"testing"
)

func TestScreenImage(t *testing.T) {
	img := &ScreenImage{
		Data: []byte{
			0x0, 0x0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x91, 0x9f, 0x80, 0x9f, 0x91, 0x9f, 0x0,
			0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x3f, 0x20, 0x2f, 0x20, 0x3f, 0x28, 0x2a, 0x22, 0x3f, 0x20, 0x2a, 0x20, 0x3f, 0x0,
			0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x40, 0x40, 0x40, 0x80, 0x0,
			0x0, 0x0, 0x80, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x80, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x80, 0x40, 0x40, 0x40, 0x80, 0x0, 0x80, 0x40, 0x40, 0x40, 0x80, 0x0, 0x80, 0x40,
			0x40, 0x40, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9, 0x12, 0x12, 0x12, 0xf, 0x0, 0x0, 0x1, 0x0, 0x1f, 0x0, 0x0, 0x6, 0x5, 0x4, 0x1f, 0x4, 0x0, 0x0, 0x18, 0x18, 0x0, 0x0, 0x0, 0x9, 0x12, 0x12, 0x12, 0xf, 0x0, 0x9, 0x12, 0x12, 0x12, 0xf, 0x0, 0x9, 0x12, 0x12, 0x12, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x48, 0x7c, 0x0, 0x7c, 0x54, 0x38, 0x0, 0x78, 0x18, 0x78, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x8, 0x8, 0x8, 0x8, 0x0, 0x36, 0x49, 0x49, 0x49, 0x36, 0x0, 0x42, 0x61, 0x51, 0x49, 0x46, 0x0, 0x0, 0x60, 0x60, 0x0, 0x0, 0x0, 0x3e, 0x51, 0x49, 0x45, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfc, 0x4, 0xcc, 0x4, 0xfc, 0x6c, 0x9c, 0x6c, 0xfc, 0x4, 0xdc, 0x4, 0xfc, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x5, 0x89, 0x5, 0x3, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf9, 0x9, 0xa9, 0xa9, 0xf9, 0xe9, 0x9, 0xe9, 0xf9, 0x9, 0x29, 0x49, 0xf9, 0x0, 0xff, 0x8, 0x88, 0x8, 0xe8, 0x4, 0xc4, 0x4, 0xe4, 0x4, 0xc8, 0x8, 0xe4, 0x8, 0xc6, 0x3, 0xc4, 0x2, 0xf2, 0x2, 0xe4, 0x2, 0x2, 0x4, 0x84, 0x4, 0x4, 0x4, 0xfc, 0x4, 0xf8, 0x4, 0xe4, 0x4, 0xf4, 0x4, 0xc4, 0xe, 0xe1, 0x6, 0xe8, 0x8, 0xe8, 0x4, 0xf2, 0x4, 0x82, 0x2, 0xf4, 0x4, 0xc4, 0x4, 0xf8, 0x4, 0x4, 0xe, 0x81, 0x6, 0xc8, 0x8, 0xe8, 0x4, 0x4, 0x4, 0x8, 0x4, 0x4, 0x8, 0xe8, 0x10, 0x10, 0x20, 0x20, 0x20, 0x10, 0x20, 0xa0, 0x20, 0x30, 0xc, 0xf0, 0x20, 0xc0, 0x20, 0x20, 0x20, 0xa0, 0x20, 0x10, 0x20, 0x20, 0x10, 0x10, 0x8, 0x88, 0x8, 0x10, 0x8, 0xc8, 0x10, 0xd0, 0x8, 0x4, 0x4, 0xe2, 0xc, 0x90, 0x20, 0xa0, 0x20, 0x20, 0x20, 0x40, 0x40, 0x43, 0x2, 0x23, 0xf3, 0x3, 0x2, 0xd2, 0x52, 0x73, 0x2, 0xf3, 0x12, 0xf3, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xfe, 0x0, 0xff, 0x0, 0xff, 0x0, 0xfe, 0x0, 0xfe, 0x0, 0xff, 0x0, 0xfe, 0x0, 0xff, 0x0, 0xff, 0x0, 0xfe, 0x0, 0xff, 0x0, 0xff, 0x0, 0xfe, 0x0, 0xfe, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xfe, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xfe, 0x0, 0x38, 0xa8, 0xf8, 0x0, 0xf9, 0x89, 0xf9, 0x0, 0xe9, 0xa9, 0xb9, 0x0, 0x1, 0x81, 0x1, 0x0, 0xfb, 0x8a, 0xfb, 0x2, 0xfb, 0x8a, 0xfb, 0x2, 0xfb, 0x8a, 0xfb, 0x2, 0xfb, 0x32, 0xfb, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3b, 0xaa, 0xfb, 0x2, 0x93, 0xfa, 0x83, 0x2, 0xbb, 0xaa, 0xeb, 0x2, 0x3, 0x82, 0x3, 0x2, 0xfb, 0x8a, 0xfb, 0x2, 0xfb, 0x8a, 0xfb, 0x2, 0xfb, 0x8a, 0xfb, 0x2, 0xfb, 0x32, 0xfb, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x3a, 0xab, 0xfa, 0x3, 0xea, 0xab, 0xba, 0x3, 0xfa, 0xab, 0xfa, 0x3, 0x2, 0x83, 0x2, 0x3, 0xfa, 0x8b, 0xfa, 0x3, 0xfa, 0x8b, 0xfa, 0x3, 0xfa, 0x8b, 0xfa, 0x3, 0xfa, 0x33, 0xfa, 0x3, 0x2, 0x3, 0x2,
		},
	}
	// newData := make([]byte, len(img.Data))
	// for y := 0; y < 64; y++ {
	// 	for x := x ; x < 128; x++ {

	// 	}
	// }
	imgf, err := os.Create("lcd.png")
	if err != nil {
		t.Fatal(err)
	}
	defer imgf.Close()
	if err := png.Encode(imgf, img); err != nil {
		t.Fatal(err)
	}
}
